# -*- coding: utf-8 -*-
"""Processing.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1o20aTv6EpDYeQ_siBn-pEVIme9RcQEKc
"""

import numpy as np
import pandas as pd
from google.colab import drive
from google.colab import files
import re

prefix = '/content/drive'
from google.colab import drive
drive.mount(prefix, force_remount=True)

"""# Listings"""

df = pd.read_csv('listings.csv')
print(len(df))
df.head()

col_list = ['id', 'listing_url', 'name', 'description', 'picture_url', 'host_id', 'host_url', 'host_name',
            'host_about', 'host_is_superhost', 'host_picture_url', 'host_total_listings_count',
            'neighbourhood_group_cleansed', 'latitude', 'longitude', 'room_type', 'accommodates', 
            'bathrooms_text', 'bedrooms', 'beds', 'amenities', 'price', 'minimum_nights',	'maximum_nights',
            'has_availability', 'number_of_reviews', 'last_review', 'review_scores_rating', 'instant_bookable',
            'calculated_host_listings_count', 'reviews_per_month']
df = df[col_list]

df.head()

# fill missing values
df['listing_url'] = df['listing_url'].fillna('https://www.airbnb.com/')
df['name'] = df['name'].fillna('Untitled Property')
df['description'] = df['description'].fillna('No description provided.')
df['picture_url'] = df['picture_url'].fillna('https://upload.wikimedia.org/wikipedia/commons/7/75/No_image_available.png')
df['host_url'] = df['host_url'].fillna('Untitled Property')
df['host_name'] = df['host_name'].fillna('Unidentified')
df['host_since'] = df['picture_url'].fillna('9/9/08')
df['host_about'] = df['picture_url'].fillna('No information provided.')
df['host_is_superhost'] = df['host_is_superhost'].fillna('f')
df['host_picture_url'] = df['picture_url'].fillna('https://upload.wikimedia.org/wikipedia/commons/7/75/No_image_available.png')


df['bedrooms'] = df['bedrooms'].fillna((df['bedrooms'].mean()))
df['bathrooms_text'] = df['bathrooms_text'].fillna('0')
df['beds'] = df['beds'].fillna((df['beds'].mean()))
df['host_total_listings_count'] = df['host_total_listings_count'].fillna(1)
df['review_scores_rating'] = df['review_scores_rating'].fillna((df['review_scores_rating'].mean()))
df['reviews_per_month'] = df['reviews_per_month'].fillna(0)

# remove HTML tags
df['description'] = df['description'].apply(lambda x: re.sub('<[^<]+?>', '', str(x)))

# convert t/f
df['host_is_superhost'] = df['host_is_superhost'].apply(lambda x: 1 if (x == 't') else 0)
df['has_availability'] = df['has_availability'].apply(lambda x: 1 if (x == 't') else 0)
df['instant_bookable'] = df['instant_bookable'].apply(lambda x: 1 if (x == 't') else 0)

# convert last_review column to be of type date-time
df['last_review'] = pd.to_datetime(df['last_review'])

# removing $ sign
df['price'] = df['price'].str.replace('$','')
df['price'] = df['price'].str.replace(',','')
df[['price']] = df[['price']].astype('Float64')

df.head()
print(len(df))

df = df.dropna()
df.head()
print(len(df))

# download
df.to_csv('listings.csv')
files.download('listings.csv')

"""# Bar Locations"""

# load dataset
df = pd.read_csv('bar_locations.csv')

# view dataset
df.head()

# download
df.to_csv('bars.csv')
files.download('bars.csv')

"""# Parties"""

# load dataset
df = pd.read_csv('party_in_nyc.csv')

# remove null rows
df = df.dropna()

# convert created and closed date columns to be of type date-time
df['Created Date'] = pd.to_datetime(df['Created Date'])
df['Closed Date'] = pd.to_datetime(df['Closed Date'])

# view dataset
df.head()

# download
df.to_csv('parties.csv')
files.download('parties.csv')